// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// processFloWave2
Rcpp::DataFrame processFloWave2(CharacterVector input, bool writeFit, bool writeGauss, bool readBinLVIS, bool readHDFlvis, bool readHDFgedi, CharacterVector level2, NumericVector bounds, bool ground, bool useInt, bool useFrac, float rhRes, float laiRes, float laiH, bool noRHgauss, float gTol, float fhdHistRes, bool forcePsigma, bool bayesGround, bool dontTrustGround, bool noRoundCoord, NumericVector dcBias, float nSig, int seed, float hNoise, NumericVector linkNoise, float linkFsig, float linkPsig, float trueSig, int bitRate, float maxDN, bool renoise, float newPsig, float oldPsig, float addDrift, bool missGround, NumericVector minGap, bool photonCount, float nPhotons, float photonWind, float noiseMult, float meanN, float thresh, bool varNoise, float varScale, float statsLen, bool noiseTrack, float sWidth, float psWidth, float msWidth, bool preMatchF, bool postMatchF, CharacterVector pFile, float gWidth, float minGsig, float minWidth, bool medNoise, bool varDrift, NumericVector driftFac, float varRhoG, float varRhoC, float pSigma, bool gold, float deconTol);
RcppExport SEXP _rLVIS_processFloWave2(SEXP inputSEXP, SEXP writeFitSEXP, SEXP writeGaussSEXP, SEXP readBinLVISSEXP, SEXP readHDFlvisSEXP, SEXP readHDFgediSEXP, SEXP level2SEXP, SEXP boundsSEXP, SEXP groundSEXP, SEXP useIntSEXP, SEXP useFracSEXP, SEXP rhResSEXP, SEXP laiResSEXP, SEXP laiHSEXP, SEXP noRHgaussSEXP, SEXP gTolSEXP, SEXP fhdHistResSEXP, SEXP forcePsigmaSEXP, SEXP bayesGroundSEXP, SEXP dontTrustGroundSEXP, SEXP noRoundCoordSEXP, SEXP dcBiasSEXP, SEXP nSigSEXP, SEXP seedSEXP, SEXP hNoiseSEXP, SEXP linkNoiseSEXP, SEXP linkFsigSEXP, SEXP linkPsigSEXP, SEXP trueSigSEXP, SEXP bitRateSEXP, SEXP maxDNSEXP, SEXP renoiseSEXP, SEXP newPsigSEXP, SEXP oldPsigSEXP, SEXP addDriftSEXP, SEXP missGroundSEXP, SEXP minGapSEXP, SEXP photonCountSEXP, SEXP nPhotonsSEXP, SEXP photonWindSEXP, SEXP noiseMultSEXP, SEXP meanNSEXP, SEXP threshSEXP, SEXP varNoiseSEXP, SEXP varScaleSEXP, SEXP statsLenSEXP, SEXP noiseTrackSEXP, SEXP sWidthSEXP, SEXP psWidthSEXP, SEXP msWidthSEXP, SEXP preMatchFSEXP, SEXP postMatchFSEXP, SEXP pFileSEXP, SEXP gWidthSEXP, SEXP minGsigSEXP, SEXP minWidthSEXP, SEXP medNoiseSEXP, SEXP varDriftSEXP, SEXP driftFacSEXP, SEXP varRhoGSEXP, SEXP varRhoCSEXP, SEXP pSigmaSEXP, SEXP goldSEXP, SEXP deconTolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input(inputSEXP);
    Rcpp::traits::input_parameter< bool >::type writeFit(writeFitSEXP);
    Rcpp::traits::input_parameter< bool >::type writeGauss(writeGaussSEXP);
    Rcpp::traits::input_parameter< bool >::type readBinLVIS(readBinLVISSEXP);
    Rcpp::traits::input_parameter< bool >::type readHDFlvis(readHDFlvisSEXP);
    Rcpp::traits::input_parameter< bool >::type readHDFgedi(readHDFgediSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type level2(level2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bounds(boundsSEXP);
    Rcpp::traits::input_parameter< bool >::type ground(groundSEXP);
    Rcpp::traits::input_parameter< bool >::type useInt(useIntSEXP);
    Rcpp::traits::input_parameter< bool >::type useFrac(useFracSEXP);
    Rcpp::traits::input_parameter< float >::type rhRes(rhResSEXP);
    Rcpp::traits::input_parameter< float >::type laiRes(laiResSEXP);
    Rcpp::traits::input_parameter< float >::type laiH(laiHSEXP);
    Rcpp::traits::input_parameter< bool >::type noRHgauss(noRHgaussSEXP);
    Rcpp::traits::input_parameter< float >::type gTol(gTolSEXP);
    Rcpp::traits::input_parameter< float >::type fhdHistRes(fhdHistResSEXP);
    Rcpp::traits::input_parameter< bool >::type forcePsigma(forcePsigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type bayesGround(bayesGroundSEXP);
    Rcpp::traits::input_parameter< bool >::type dontTrustGround(dontTrustGroundSEXP);
    Rcpp::traits::input_parameter< bool >::type noRoundCoord(noRoundCoordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dcBias(dcBiasSEXP);
    Rcpp::traits::input_parameter< float >::type nSig(nSigSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< float >::type hNoise(hNoiseSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linkNoise(linkNoiseSEXP);
    Rcpp::traits::input_parameter< float >::type linkFsig(linkFsigSEXP);
    Rcpp::traits::input_parameter< float >::type linkPsig(linkPsigSEXP);
    Rcpp::traits::input_parameter< float >::type trueSig(trueSigSEXP);
    Rcpp::traits::input_parameter< int >::type bitRate(bitRateSEXP);
    Rcpp::traits::input_parameter< float >::type maxDN(maxDNSEXP);
    Rcpp::traits::input_parameter< bool >::type renoise(renoiseSEXP);
    Rcpp::traits::input_parameter< float >::type newPsig(newPsigSEXP);
    Rcpp::traits::input_parameter< float >::type oldPsig(oldPsigSEXP);
    Rcpp::traits::input_parameter< float >::type addDrift(addDriftSEXP);
    Rcpp::traits::input_parameter< bool >::type missGround(missGroundSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type minGap(minGapSEXP);
    Rcpp::traits::input_parameter< bool >::type photonCount(photonCountSEXP);
    Rcpp::traits::input_parameter< float >::type nPhotons(nPhotonsSEXP);
    Rcpp::traits::input_parameter< float >::type photonWind(photonWindSEXP);
    Rcpp::traits::input_parameter< float >::type noiseMult(noiseMultSEXP);
    Rcpp::traits::input_parameter< float >::type meanN(meanNSEXP);
    Rcpp::traits::input_parameter< float >::type thresh(threshSEXP);
    Rcpp::traits::input_parameter< bool >::type varNoise(varNoiseSEXP);
    Rcpp::traits::input_parameter< float >::type varScale(varScaleSEXP);
    Rcpp::traits::input_parameter< float >::type statsLen(statsLenSEXP);
    Rcpp::traits::input_parameter< bool >::type noiseTrack(noiseTrackSEXP);
    Rcpp::traits::input_parameter< float >::type sWidth(sWidthSEXP);
    Rcpp::traits::input_parameter< float >::type psWidth(psWidthSEXP);
    Rcpp::traits::input_parameter< float >::type msWidth(msWidthSEXP);
    Rcpp::traits::input_parameter< bool >::type preMatchF(preMatchFSEXP);
    Rcpp::traits::input_parameter< bool >::type postMatchF(postMatchFSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type pFile(pFileSEXP);
    Rcpp::traits::input_parameter< float >::type gWidth(gWidthSEXP);
    Rcpp::traits::input_parameter< float >::type minGsig(minGsigSEXP);
    Rcpp::traits::input_parameter< float >::type minWidth(minWidthSEXP);
    Rcpp::traits::input_parameter< bool >::type medNoise(medNoiseSEXP);
    Rcpp::traits::input_parameter< bool >::type varDrift(varDriftSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type driftFac(driftFacSEXP);
    Rcpp::traits::input_parameter< float >::type varRhoG(varRhoGSEXP);
    Rcpp::traits::input_parameter< float >::type varRhoC(varRhoCSEXP);
    Rcpp::traits::input_parameter< float >::type pSigma(pSigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type gold(goldSEXP);
    Rcpp::traits::input_parameter< float >::type deconTol(deconTolSEXP);
    rcpp_result_gen = Rcpp::wrap(processFloWave2(input, writeFit, writeGauss, readBinLVIS, readHDFlvis, readHDFgedi, level2, bounds, ground, useInt, useFrac, rhRes, laiRes, laiH, noRHgauss, gTol, fhdHistRes, forcePsigma, bayesGround, dontTrustGround, noRoundCoord, dcBias, nSig, seed, hNoise, linkNoise, linkFsig, linkPsig, trueSig, bitRate, maxDN, renoise, newPsig, oldPsig, addDrift, missGround, minGap, photonCount, nPhotons, photonWind, noiseMult, meanN, thresh, varNoise, varScale, statsLen, noiseTrack, sWidth, psWidth, msWidth, preMatchF, postMatchF, pFile, gWidth, minGsig, minWidth, medNoise, varDrift, driftFac, varRhoG, varRhoC, pSigma, gold, deconTol));
    return rcpp_result_gen;
END_RCPP
}
// gediRat
void gediRat(CharacterVector input, CharacterVector output, bool inList, bool ground, bool hdf, CharacterVector waveID, NumericVector coords, CharacterVector listCoord, NumericVector gridBound, float gridStep, float pSigma, float pFWHM, CharacterVector readPulse, float fSigma, CharacterVector wavefront, float res, bool LVIS, bool topHat, bool sideLobe, float lobeAng, bool checkCover, float maxScanAng, float decimate, uint64_t pBuff, int maxBins, bool countOnly, bool pulseAfter, bool pulseBefore, bool noNorm, bool noOctree, int octLevels, int nOctPix, bool decon, bool indDecon, bool readWave, bool listFiles, bool keepOld, bool useShadow, bool polyGround, bool nnGround, NumericVector seed);
RcppExport SEXP _rLVIS_gediRat(SEXP inputSEXP, SEXP outputSEXP, SEXP inListSEXP, SEXP groundSEXP, SEXP hdfSEXP, SEXP waveIDSEXP, SEXP coordsSEXP, SEXP listCoordSEXP, SEXP gridBoundSEXP, SEXP gridStepSEXP, SEXP pSigmaSEXP, SEXP pFWHMSEXP, SEXP readPulseSEXP, SEXP fSigmaSEXP, SEXP wavefrontSEXP, SEXP resSEXP, SEXP LVISSEXP, SEXP topHatSEXP, SEXP sideLobeSEXP, SEXP lobeAngSEXP, SEXP checkCoverSEXP, SEXP maxScanAngSEXP, SEXP decimateSEXP, SEXP pBuffSEXP, SEXP maxBinsSEXP, SEXP countOnlySEXP, SEXP pulseAfterSEXP, SEXP pulseBeforeSEXP, SEXP noNormSEXP, SEXP noOctreeSEXP, SEXP octLevelsSEXP, SEXP nOctPixSEXP, SEXP deconSEXP, SEXP indDeconSEXP, SEXP readWaveSEXP, SEXP listFilesSEXP, SEXP keepOldSEXP, SEXP useShadowSEXP, SEXP polyGroundSEXP, SEXP nnGroundSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input(inputSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type output(outputSEXP);
    Rcpp::traits::input_parameter< bool >::type inList(inListSEXP);
    Rcpp::traits::input_parameter< bool >::type ground(groundSEXP);
    Rcpp::traits::input_parameter< bool >::type hdf(hdfSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type waveID(waveIDSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type listCoord(listCoordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gridBound(gridBoundSEXP);
    Rcpp::traits::input_parameter< float >::type gridStep(gridStepSEXP);
    Rcpp::traits::input_parameter< float >::type pSigma(pSigmaSEXP);
    Rcpp::traits::input_parameter< float >::type pFWHM(pFWHMSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type readPulse(readPulseSEXP);
    Rcpp::traits::input_parameter< float >::type fSigma(fSigmaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type wavefront(wavefrontSEXP);
    Rcpp::traits::input_parameter< float >::type res(resSEXP);
    Rcpp::traits::input_parameter< bool >::type LVIS(LVISSEXP);
    Rcpp::traits::input_parameter< bool >::type topHat(topHatSEXP);
    Rcpp::traits::input_parameter< bool >::type sideLobe(sideLobeSEXP);
    Rcpp::traits::input_parameter< float >::type lobeAng(lobeAngSEXP);
    Rcpp::traits::input_parameter< bool >::type checkCover(checkCoverSEXP);
    Rcpp::traits::input_parameter< float >::type maxScanAng(maxScanAngSEXP);
    Rcpp::traits::input_parameter< float >::type decimate(decimateSEXP);
    Rcpp::traits::input_parameter< uint64_t >::type pBuff(pBuffSEXP);
    Rcpp::traits::input_parameter< int >::type maxBins(maxBinsSEXP);
    Rcpp::traits::input_parameter< bool >::type countOnly(countOnlySEXP);
    Rcpp::traits::input_parameter< bool >::type pulseAfter(pulseAfterSEXP);
    Rcpp::traits::input_parameter< bool >::type pulseBefore(pulseBeforeSEXP);
    Rcpp::traits::input_parameter< bool >::type noNorm(noNormSEXP);
    Rcpp::traits::input_parameter< bool >::type noOctree(noOctreeSEXP);
    Rcpp::traits::input_parameter< int >::type octLevels(octLevelsSEXP);
    Rcpp::traits::input_parameter< int >::type nOctPix(nOctPixSEXP);
    Rcpp::traits::input_parameter< bool >::type decon(deconSEXP);
    Rcpp::traits::input_parameter< bool >::type indDecon(indDeconSEXP);
    Rcpp::traits::input_parameter< bool >::type readWave(readWaveSEXP);
    Rcpp::traits::input_parameter< bool >::type listFiles(listFilesSEXP);
    Rcpp::traits::input_parameter< bool >::type keepOld(keepOldSEXP);
    Rcpp::traits::input_parameter< bool >::type useShadow(useShadowSEXP);
    Rcpp::traits::input_parameter< bool >::type polyGround(polyGroundSEXP);
    Rcpp::traits::input_parameter< bool >::type nnGround(nnGroundSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type seed(seedSEXP);
    gediRat(input, output, inList, ground, hdf, waveID, coords, listCoord, gridBound, gridStep, pSigma, pFWHM, readPulse, fSigma, wavefront, res, LVIS, topHat, sideLobe, lobeAng, checkCover, maxScanAng, decimate, pBuff, maxBins, countOnly, pulseAfter, pulseBefore, noNorm, noOctree, octLevels, nOctPix, decon, indDecon, readWave, listFiles, keepOld, useShadow, polyGround, nnGround, seed);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rLVIS_processFloWave2", (DL_FUNC) &_rLVIS_processFloWave2, 64},
    {"_rLVIS_gediRat", (DL_FUNC) &_rLVIS_gediRat, 41},
    {NULL, NULL, 0}
};

RcppExport void R_init_rLVIS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
